name: Deploy Environment
run-name: Deploy Personal Environment (${{ github.actor }})
on:
  workflow_dispatch:
    inputs:
      AWS_ACCESS_KEY:
        description: "Personal AWS Access Key"
        required: true
      AWS_SECRET_KEY:
        description: "Personal AWS Secret Key"
        required: true

jobs:
  # Terraform Tests
  terraform-test:
    name: Terraform Test
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Create .pem file from AWS_PEM_KEY secret
        run: |
          echo "${{ secrets.AWS_PEM_KEY }}" > terraform/${{ vars.PEM_FILENAME }}
          chmod 400 terraform/${{ vars.PEM_FILENAME }}
        shell: bash

      - name: Setup aws provider
        shell: bash
        run: |
          echo 'provider "aws" {
            region = "${var.region}"
            access_key = "${{ secrets.TF_PLAN_AWS_ACCESS_KEY }}"
            secret_key = "${{ secrets.TF_PLAN_AWS_SECRET_KEY }}"
          }' >> terraform/aws_provider.tf

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - run: terraform --version
      
      - name: Terraform Init
        run: cd terraform/ && terraform init

      - name: Terraform Validate
        if: success() || failure()
        run: cd terraform/ && terraform validate

      - name: Terraform Plan
        run: | 
          cd terraform/
          terraform plan -input=false -var "key_name=${{ vars.PEM_FILENAME }}"
        shell: bash

  # Deploy Infrastructure
  deploy:
    name: Deploy Terraform Infrastructure
    runs-on: ubuntu-latest
    environment: dev
    needs: terraform-test
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Create .pem file from AWS_PEM_KEY secret
        run: |
          echo "${{ secrets.AWS_PEM_KEY }}" > terraform/${{ vars.PEM_FILENAME }}
          chmod 400 terraform/${{ vars.PEM_FILENAME }}
        shell: bash

      - name: Mask inputs
        run: |
          AWS_ACCESS_KEY_MASKED=$(jq -r '.inputs.AWS_ACCESS_KEY' $GITHUB_EVENT_PATH)
          AWS_SECRET_KEY_MASKED=$(jq -r '.inputs.AWS_SECRET_KEY' $GITHUB_EVENT_PATH)
          echo "::add-mask::$AWS_ACCESS_KEY_MASKED"
          echo "::add-mask::$AWS_SECRET_KEY_MASKED"
          echo AWS_ACCESS_KEY_MASKED=$AWS_ACCESS_KEY_MASKED >> $GITHUB_ENV
          echo AWS_SECRET_KEY_MASKED=$AWS_SECRET_KEY_MASKED >> $GITHUB_ENV

      - name: Setup aws provider
        shell: bash
        run: |
          echo 'provider "aws" {
            region = "${var.region}"
            access_key = "${{ env.AWS_ACCESS_KEY_MASKED }}"
            secret_key = "${{ env.AWS_SECRET_KEY_MASKED }}"
          }' >> terraform/aws_provider.tf

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: cd terraform/ && terraform init

      - name: Terraform Plan
        run: | 
          cd terraform/
          terraform plan -input=false -var "key_name=${{ vars.PEM_FILENAME }}"
        shell: bash

      - name: Terraform Apply
        run: |
          cd terraform/
          terraform apply -input=false -var "key_name=${{ vars.PEM_FILENAME }}"
